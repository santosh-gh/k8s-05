trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  serviceConnection: 'arm-svc-con'
  aksCluster: 'aks-onlinestore-dev-uksouth-001'
  aksResourceGroup: 'rg-onlinestore-dev-uksouth-001'
  acrName: 'acronlinestoredevuksouth001'
  namespace: 'default'
  environment: "dev"
  artifactName: 'manifests'

stages:

  - stage: Publish
    displayName: Publish Artifact
    jobs:
      - job: PublishArtifact
        displayName: Publish Artifact
        steps:          
          - task: PublishPipelineArtifact@1
            displayName: Publish Manifest
            inputs:
              artifactName: $(artifactName)
              path: $(artifactName)

  - stage: Deploy
    jobs:
    - deployment: DeployAKS
      displayName: Deploy AKS
      environment: $(environment)
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: $(artifactName)

              - script: |
                  echo "Workspace Directory: $(Pipeline.Workspace)"
                  ls -R "$(Pipeline.Workspace)"

              - task: AzureCLI@2
                displayName: Get AKS Credentials
                inputs:
                  azureSubscription: $(serviceConnection)
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    echo "Getting AKS credentials..."
                    az aks get-credentials --name $(aksCluster) --resource-group $(aksResourceGroup) --overwrite-existing
                          
                    echo "Deploying to AKS..."
                    kubectl apply -f $(Pipeline.Workspace)/manifests/rabbitmq-statefulset.yml -n $(namespace)  
                    kubectl apply -f $(Pipeline.Workspace)/manifests/rabbitmq-service.yml -n $(namespace) 

                    echo "Deployment completed."